#include<iostream>
using namespace std;

int INF = 1000000000;
int d[110][110];
void floydWarshall(int n);

int main() {
	cin.tie(NULL);
	ios::sync_with_stdio(false);

	int n, input;
	cin >> n;

	// 결과 그래프를 초기화
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> input;
			if (input == 0) {
				d[i][j] = INF;
			}
			else {
				d[i][j] = input;
			}
		}
	}
	
	// 플로이드 와샬 알고리즘을 수행
	floydWarshall(n);
	return 0;
}

void floydWarshall(int n) {
	// k = 거쳐가는 노드
	for (int k = 0; k < n; k++) {
		// i = 출발 노드
		for (int i = 0; i < n; i++) {
			// j = 도착 노드
			for (int j = 0; j < n; j++) {
				if (d[i][k] + d[k][j] < d[i][j]) {
					d[i][j] = d[i][k] + d[k][j];
				}
			}
		}
	}

	// 결과 그래프를 출력. 가중치가 없는 그래프이기 때문에 INF이 아닌 수는 모두 1로 출력
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (d[i][j] == INF) {
				cout << 0 << " ";
			}
			else {
				cout << 1 << " ";
			}
		}
		cout << "\n";
	}
}