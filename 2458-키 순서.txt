#include<iostream>
using namespace std;

int INF = 100000;
int students[510][510];

void floydWarshall(int n);

int main() {
	cin.tie(NULL);
	ios::sync_with_stdio(false);

	int n, m;
	cin >> n >> m;

	// students배열 INF 값으로 초기화
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			students[i][j] = INF;
		}
	}

	// 학생들의 키 정보를 받음
	int a, b;
	for (int i = 0; i < m; i++) {
		cin >> a >> b;
		students[a][b] = -1;
		students[b][a] = 1;
	}

	// 플로이드 와샬 알고리즘 수행
	floydWarshall(n);
	return 0;
}

void floydWarshall(int n) {
	for (int k = 1; k <= n; k++) {
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= n; j++) {
				if (students[i][k] == -1 && students[k][j] == -1) {
					students[i][j] = -1;
					students[j][i] = 1;
				}
				else if (students[i][k] == 1 && students[k][j] == 1) {
					students[i][j] = 1;
					students[j][i] = -1;
				}
			}
		}
	}

	int num = 0;
	for (int i = 1; i <= n; i++) {
		if (count(students[i], students[i] + n + 1, INF) == 1) {
			num++;
		}
	}
	cout << num << "\n";
}